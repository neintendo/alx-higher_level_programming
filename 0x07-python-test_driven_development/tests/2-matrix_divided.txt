Tests for the ``matrix_divided`` module.
============================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, "eh")
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, "eh", 3], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6, 8]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> div = float('inf')
>>> matrix_divided(matrix, div)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided(matrix)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[0.0, 0.0, 0.0], [0.0, 0.0, 'inf']]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
